/* code credit: https://www.tutorialspoint.com/data_structures_algorithms/stack_program_in_c.htm */

int MAXSIZE = 8;       
int stack[8];     
int top = -1;            

int isempty() {

   if(top == -1)
      return 1;
   else
      return 0;
}
   
int isfull() {

   if(top == MAXSIZE)
      return 1;
   else
      return 0;
}

int peek() {
   return stack[top];
}

int show(int i) {
    return stack[i];
}

int pop() {
   int data;
	
   if(!isempty()) {
      data = stack[top];
      top = top - 1;   
      return data;
   } else {
      printf("Could not retrieve data, Stack is empty.\n");
   }
}

int push(int data) {

   if(!isfull()) {
      top = top + 1;   
      stack[top] = data;
   } else {
      printf("Could not insert data, Stack is full.\n");
   }
}

void items() {
    if(!isempty()) {
        printf("[");
        for (i = 0; i <= top; ++i) {
            printf("%d", stack[i]);
        }
        printf("]");
    } else {
        printf("[]");
    }
}

int main() {
   SESSIONS[
    [session]
    top = -1;
    ]
   
   return 0;
}